{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a002e497",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "89664588",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "python\n",
      "php\n",
      "java\n",
      "252\n",
      "The minimum value is  1\n",
      "The maximum value is  774\n",
      "[10, 'abcd', 21, 35, 73]\n",
      "[1, 2, 3, 5, 7, 9, 10]\n",
      "(1, 2, 3, 4)\n",
      "(1, 2, 3, 4, 9)\n",
      "(2, 3, 5, 7, 8)\n",
      "baina\n",
      "1\n",
      "2\n",
      "3\n",
      "gg\n",
      "{'ori', 'aa', 2, 3, 5, 'ari'}\n",
      "{'ori'}\n",
      "3\n",
      "{'ori', 'aa'}\n",
      "set()\n",
      "set()\n",
      "heey\n",
      "hi\n",
      "heey hi\n",
      "{1: 'girl', 2: 'boy', 3: 'lady'}\n",
      "{1: 'girl', 2: 'boy', 'men': 'women'}\n"
     ]
    }
   ],
   "source": [
    "#1. Жагсаалтад 'python', 'php', 'java' гэсэн утгуудыг хадгал. Жагсаалт дахь байрлалыг ашиглан эдгээр утга бүрийг хэвлэ.\n",
    "list1=['python', 'php', 'java']\n",
    "for i in list1:\n",
    "    print(i)\n",
    "#2. ?10 гишүүн бүхий тоон жагсаалт үүсгэ. Жагсаалтын нийлбэрийг давталт ашиглан хэвлэ.\n",
    "\n",
    "#3. 5 гишүүн бүхий тоон жагсаалт үүсгэ. Жагсаалтын гишүүдийн үржвэрийг хэвлэх функц бич.Үр дүнг хэвлэ.\n",
    "list=[1, 3, 7, 2, 6]\n",
    "def multiplylist(mylist):\n",
    "    result=1\n",
    "    for x in mylist:\n",
    "        result=result*x\n",
    "    return result\n",
    "print(multiplylist(list))\n",
    "\n",
    "#4. Өгөгдсөн тоон жагсаалтын 3 дахь элементийг сүүлийн сүүлийн элементтэй үржүүлэн үр дүнг буцаадаг функц бич.\n",
    "#5. Өгөгдсөн тоон жагсаалтаас хамгийн их болон хамгийн бага утгуудыг буцаах функц бич.Үр дүнг хэвлэ.\n",
    "def minimum(lst):\n",
    "    min_val = None\n",
    "    for val in lst:\n",
    "        \n",
    "        if min_val == None or min_val > val:\n",
    "            min_val = val\n",
    "    return min_val\n",
    "def maximum(lst):\n",
    "    max_val = None\n",
    "    for val in lst:\n",
    "        if max_val == None or max_val < val:\n",
    "            max_val = val\n",
    "    return max_val\n",
    "def main():\n",
    "    lst1 = [1, 2, 3, 4, 5, 6, 774, 304]\n",
    "    print(\"The minimum value is \", minimum(lst1))\n",
    "    list1 = [1, 2, 3, 4, 5, 6, 774, 304]\n",
    "    print(\"The maximum value is \", maximum(lst1))\n",
    "main()\n",
    "#6. Өгөгдсөн жагсаалтаас хоёроос дээш оронтой, эхний болон төгсгөлийн тэмдэгтүүд нь хоорондоо адилхан гишүүн хэд байгааг тоолох функц бич.Жишээ: Оролт [abdba, abcd, 121 ], Гаралт 2\n",
    "def checkEquality(s):\n",
    "    return (ord(s[0]) == ord(s[len(s) - 1]));\n",
    " \n",
    "def countSubstringWithEqualEnds(s):\n",
    "    result = 0;\n",
    "    n = len(s);\n",
    " \n",
    "    # Starting point of substring\n",
    "    for i in range(n):\n",
    " \n",
    "    # Length of substring\n",
    "        for j in range(1,n-i+1):\n",
    " \n",
    "        # Check if current substring has same\n",
    "        # starting and ending characters.\n",
    "            if (checkEquality(s[i:i+j])):\n",
    "                result+=1;\n",
    " \n",
    "    return result;\n",
    "#7. Өгөгдсөн жагсаалтаас давхардсан утгуудыг арилгаж, хэвлэ.Жишээ: Оролт [abdba, abcd, 121, 121, abcd ], Гаралт [abdba, abcd, 121 ]\n",
    "data = [10, 10, \"abcd\", \"abcd\", 21, 35, 73]\n",
    "def remove_duplicates(duplist):\n",
    "    noduplist = []\n",
    "    for element in duplist:\n",
    "        if element not in noduplist:\n",
    "            noduplist.append(element)\n",
    "    return noduplist\n",
    "print(remove_duplicates(data))\n",
    "\n",
    "#8. Жагсаалт хоосон эсэхийг шалгах функц бич Үр дүнг хэвлэ.\n",
    "a = [12, 22]\n",
    "def is_list_empty(a):\n",
    "    if not a:\n",
    "        print(\"list is empty\")\n",
    "    else:\n",
    "        print('list has value')\n",
    "#9. 10 гишүүн бүхий жагсаалтын 4, 6, 8 дахь гишүүдийг устгаж, хэвлэ.\n",
    "aku = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
    "aku.remove(4)\n",
    "aku.remove(6)\n",
    "aku.remove(8)\n",
    "print(aku)\n",
    "#10. Тоон гишүүн бүхий tuple үүсгэ.\n",
    "number_2 = (1, 2, 3, 4)\n",
    "print(number_2)\n",
    "#11. Tuple –д гишүүн нэмэх програм бич.\n",
    "nu = (1, 2, 3, 4)\n",
    "nu = nu + (9,)\n",
    "print(nu)\n",
    "#12. Tuple –ийн 2 дахь элемент болон араасаа 2 дахь элементийг хэвлэ.\n",
    "nu = (1, 2, 3, 5, 7, 8, 99, 4)\n",
    "print(nu[1: 6])\n",
    "#13. Tuple –д гараас оруулсан утга байгаа эсэхийг шалгах програм бич.\n",
    "fruits = (1, 2, 3, 'gg')\n",
    "if 'gg' in fruits:\n",
    "    print('baina')\n",
    "\n",
    "#14. Өгөгдсөн Tuple –ийн бүх гишүүдийг давталт ашиглан хэвлэ.\n",
    "fruits = (1, 2, 3, 'gg')\n",
    "for i in fruits:\n",
    "    print(i)\n",
    "#15. 2 төрлийн set үүсгэн хооронд нь нэгтгэх програм бич.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "haa = {2, 3, 5}\n",
    "newset = hey.union(haa)\n",
    "print(newset)\n",
    "#16. 2 төрлийн set үүсгэн аль алинд байгаа утгыг олох програм бич.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "haa = {2, 3, 'ori'}\n",
    "newset = hey.intersection(haa)\n",
    "print(newset)\n",
    "#17. Өгөгдсөн set-ийн уртыг ол.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "print(len(hey))\n",
    "#18. Өгөгдсөн set-ээс гараас оруулсан утгыг устга.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "hey.remove('ari')\n",
    "print(hey)\n",
    "#19. Өгөгдсөн set-ийн бүх утгыг устга.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "hey.clear()\n",
    "print(hey)\n",
    "#20. Өгөгдсөн set-ийг устга.\n",
    "hey = {'ari', 'ori', 'aa'}\n",
    "hey.clear()\n",
    "print(hey)\n",
    "#21. Key, value нь тоон утга бүхий dictionary үүсгэж өсөх болон буурахаар эрэмбэл.\n",
    "\n",
    "#22. Өгөгдсөн key нь dictionary –д байгаа эсэхийг шалгах програм бич.\n",
    "dict1 = {\n",
    "    'heey' : 'hi'}\n",
    "for i in dict1:\n",
    "    print(i)\n",
    "#23. Өгөгдсөн value нь dictionary –д байгаа эсэхийг шалгах програм бич.\n",
    "dict1 = {\n",
    "    'heey' : 'hi'}\n",
    "x = dict1['heey']\n",
    "print(x)\n",
    "#24. For давталт ашиглан dictionary –ийн key, value –г хэвлэх програм бич.\n",
    "dict1 = {\n",
    "    'heey' : 'hi'}\n",
    "for x, y in dict1.items():\n",
    "    print(x, y)\n",
    "#25. Хоёр dictionary үүсгэж хооронд нь нэгтгэ.\n",
    "ethic = {1: 'girl', 2: 'boy'}\n",
    "person = {3: 'lady'}\n",
    "ethic.update(person)\n",
    "print(ethic)\n",
    "#26. Dictionary –д байгаа value хооронд нь нэмэх програм бич\n",
    "ethic = {1: 'girl', 2: 'boy'}\n",
    "ethic['men'] = 'women'\n",
    "print(ethic)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "18bd21c8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
